var a={props:{title:{type:String,required:!1}},data(){return{provider:this.$headManager.createProvider()}},beforeUnmount(){this.provider.disconnect()},methods:{isUnaryTag(r){return["area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr"].indexOf(r.type)>-1},renderTagStart(r){r.props=r.props||{},r.props.inertia=r.props["head-key"]!==void 0?r.props["head-key"]:"";const e=Object.keys(r.props).reduce((t,i)=>{const s=r.props[i];return["key","head-key"].includes(i)?t:s===""?t+` ${i}`:t+` ${i}="${s}"`},"");return`<${r.type}${e}>`},renderTagChildren(r){return typeof r.children=="string"?r.children:r.children.reduce((e,t)=>e+this.renderTag(t),"")},renderTag(r){if(r.type.toString()==="Symbol(Text)")return r.children;if(r.type.toString()==="Symbol()")return"";if(r.type.toString()==="Symbol(Comment)")return"";let e=this.renderTagStart(r);return r.children&&(e+=this.renderTagChildren(r)),this.isUnaryTag(r)||(e+=`</${r.type}>`),e},addTitleElement(r){return this.title&&!r.find(e=>e.startsWith("<title"))&&r.push(`<title inertia>${this.title}</title>`),r},renderNodes(r){return this.addTitleElement(r.flatMap(e=>e.type.toString()==="Symbol(Fragment)"?e.children:e).map(e=>this.renderTag(e)).filter(e=>e))}},render(){this.provider.update(this.renderNodes(this.$slots.default?this.$slots.default():[]))}};export{a as H};
